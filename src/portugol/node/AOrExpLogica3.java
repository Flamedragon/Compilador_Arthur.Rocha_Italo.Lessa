/* This file was generated by SableCC (http://www.sablecc.org/). */

package portugol.node;

import portugol.analysis.*;

@SuppressWarnings("nls")
public final class AOrExpLogica3 extends PExpLogica3
{
    private PExpLogica4 _expLogica4_;
    private TOr _or_;
    private PExpLogica3 _expLogica3_;

    public AOrExpLogica3()
    {
        // Constructor
    }

    public AOrExpLogica3(
        @SuppressWarnings("hiding") PExpLogica4 _expLogica4_,
        @SuppressWarnings("hiding") TOr _or_,
        @SuppressWarnings("hiding") PExpLogica3 _expLogica3_)
    {
        // Constructor
        setExpLogica4(_expLogica4_);

        setOr(_or_);

        setExpLogica3(_expLogica3_);

    }

    @Override
    public Object clone()
    {
        return new AOrExpLogica3(
            cloneNode(this._expLogica4_),
            cloneNode(this._or_),
            cloneNode(this._expLogica3_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrExpLogica3(this);
    }

    public PExpLogica4 getExpLogica4()
    {
        return this._expLogica4_;
    }

    public void setExpLogica4(PExpLogica4 node)
    {
        if(this._expLogica4_ != null)
        {
            this._expLogica4_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica4_ = node;
    }

    public TOr getOr()
    {
        return this._or_;
    }

    public void setOr(TOr node)
    {
        if(this._or_ != null)
        {
            this._or_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._or_ = node;
    }

    public PExpLogica3 getExpLogica3()
    {
        return this._expLogica3_;
    }

    public void setExpLogica3(PExpLogica3 node)
    {
        if(this._expLogica3_ != null)
        {
            this._expLogica3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica3_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expLogica4_)
            + toString(this._or_)
            + toString(this._expLogica3_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expLogica4_ == child)
        {
            this._expLogica4_ = null;
            return;
        }

        if(this._or_ == child)
        {
            this._or_ = null;
            return;
        }

        if(this._expLogica3_ == child)
        {
            this._expLogica3_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expLogica4_ == oldChild)
        {
            setExpLogica4((PExpLogica4) newChild);
            return;
        }

        if(this._or_ == oldChild)
        {
            setOr((TOr) newChild);
            return;
        }

        if(this._expLogica3_ == oldChild)
        {
            setExpLogica3((PExpLogica3) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
